def buildAsLibrary = project.hasProperty('BUILD_AS_LIBRARY');
def buildAsApplication = !buildAsLibrary
if (buildAsApplication) {
    apply plugin: 'com.android.application'
}
else {
    apply plugin: 'com.android.library'
}

android {
    compileSdkVersion 26
/*    buildToolsVersion "26.0.1"*/
    defaultConfig {
        if (buildAsApplication) {
            applicationId "org.libsdl.app"
        }
        minSdkVersion 14
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        externalNativeBuild {
            ndkBuild {
                arguments "APP_PLATFORM=android-14"
                abiFilters 'armeabi-v7a', 'x86', 'arm64-v8a'
                cFlags += "-I" + file("jni/src/SDL2/include").absolutePath + " -I" + file("jni/src/SDL2_ttf/include").absolutePath + " -I" + file("jni/src/SDL2_mixer/include").absolutePath + " -I" + file("jni/src/SDL2_image/include").absolutePath
            }
        }
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    packagingOptions {
        pickFirst 'lib/armeabi-v7a/libSDL2.so'
        pickFirst 'lib/x86/libSDL2.so'
        pickFirst 'lib/arm64-v8a/libSDL2.so'
    }

    if (!project.hasProperty('EXCLUDE_NATIVE_LIBS')) {
        sourceSets.main {
            jniLibs.srcDir 'libs'
        }
        externalNativeBuild {
            ndkBuild {
                path 'jni/Android.mk'
            }
        }
       
    }
    lintOptions {
        abortOnError false
    }
    
    if (buildAsLibrary) {
        libraryVariants.all { variant ->
            variant.outputs.each { output ->
                def outputFile = output.outputFile
                if (outputFile != null && outputFile.name.endsWith(".aar")) {
                    def fileName = "org.libsdl.app.aar";
                    output.outputFile = new File(outputFile.parent, fileName);
                }
            }
        }
    }
}

dependencies {
    /*
    compile fileTree(include: ['*.jar'], dir: 'libs')
    */
    api fileTree(include: ['*.jar'], dir: 'libs')
    /*
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    */
    /*
    androidTestApi('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    */
    api('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    /*
    testCompile 'junit:junit:4.12'
    */
    testImplementation 'junit:junit:4.12'
}
